#!/bin/bash
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# ex: ts=8 sw=4 sts=4 et filetype=sh

set -e

UNIT_DIR="${1:-/tmp}"

cmdline=( $(</proc/cmdline) )
cmdline_arg() {
    local name="$1" value="$2"
    for arg in "${cmdline[@]}"; do
        if [[ "${arg%%=*}" == "${name}" ]]; then
            value="${arg#*=}"
        fi
    done
    echo "${value}"
}

cmdline_bool() {
    local value=$(cmdline_arg "$@")
    return $(parse_bool "$value")
}

parse_bool() {
    local value="$1"
    case "$value" in
        ""|0|no|off) return 1;;
        *) return 0;;
    esac
}

add_requires() {
    local name="$1"; shift
    local requires_dir="${UNIT_DIR}/initrd.target.requires"
    mkdir -p "${requires_dir}"
    ln -sf "../${name}" "${requires_dir}/${name}"
}

add_dropin_dep() {
    local systemd_dep=$(systemd-escape --path --suffix=device "$1")
    local dropin_dir="${UNIT_DIR}/ignition-config.target.d"
    mkdir -p "${dropin_dir}"
    if cmdline_bool "ignition.userconf.dev.required"; then
        dep_type="Requires"
    else
        dep_type="Wants"
    fi
    cat <<EOF > "${dropin_dir}/10-dependencies.conf"
[Unit]
${dep_type}=${systemd_dep}
After=${systemd_dep}
EOF
}

USER_CONFIG_DEVICE="$(cmdline_arg ignition.userconf.dev)"

# Detecting firstboot can't be done with ConditionKernelCommandLine because
# that always starts the unit's dependencies. We want to start networking
# only on first boot.
if $(cmdline_bool 'ignition.firstboot' 0); then
    add_requires ignition-complete.target
    if [ -n "${USER_CONFIG_DEVICE}" ]; then
        add_dropin_dep "${USER_CONFIG_DEVICE}"
    fi
fi

echo "PLATFORM_ID=$(cmdline_arg ignition.platform.id)" > /run/ignition.env
echo "USER_CONFIG_DEVICE=\"${USER_CONFIG_DEVICE}\"" >> /run/ignition.env
